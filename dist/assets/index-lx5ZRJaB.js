var p=Object.defineProperty;var x=(o,t,i)=>t in o?p(o,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):o[t]=i;var h=(o,t,i)=>x(o,typeof t!="symbol"?t+"":t,i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const l of a.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&s(l)}).observe(document,{childList:!0,subtree:!0});function i(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(e){if(e.ep)return;e.ep=!0;const a=i(e);fetch(e.href,a)}})();class y{constructor(){h(this,"canvas");h(this,"ctx");h(this,"paddle1");h(this,"paddle2");h(this,"ball");h(this,"keys");h(this,"TRAIL_LENGTH",5);h(this,"TRAIL_FADE_TIME",2e3);h(this,"BALL_TRAIL_LENGTH",50);h(this,"BALL_TRAIL_FADE_TIME",1e3);h(this,"score1",0);h(this,"score2",0);h(this,"gameOver",!1);h(this,"winner",null);h(this,"trophyScale",0);h(this,"confettiParticles",[]);h(this,"WINNING_SCORE",5);h(this,"TROPHY_SIZE",120);h(this,"CONFETTI_COUNT",50);this.canvas=document.getElementById("gameCanvas"),this.ctx=this.canvas.getContext("2d"),this.paddle1={x:50,y:this.canvas.height/2-50,width:10,height:100,speed:5,previousPositions:[],isMoving:!1},this.paddle2={x:this.canvas.width-60,y:this.canvas.height/2-50,width:10,height:100,speed:5,previousPositions:[],isMoving:!1};const t=Date.now();for(let i=0;i<this.TRAIL_LENGTH;i++)this.paddle1.previousPositions.push({y:this.paddle1.y,moving:!1,timestamp:t}),this.paddle2.previousPositions.push({y:this.paddle2.y,moving:!1,timestamp:t});this.ball={x:this.canvas.width/2,y:this.canvas.height/2,radius:8,speedX:5,speedY:5,previousPositions:[]};for(let i=0;i<this.BALL_TRAIL_LENGTH;i++)this.ball.previousPositions.push({x:this.ball.x,y:this.ball.y,timestamp:t});this.keys={},window.addEventListener("keydown",i=>this.keys[i.key.toLowerCase()]=!0),window.addEventListener("keyup",i=>this.keys[i.key.toLowerCase()]=!1),window.addEventListener("keydown",i=>{i.code==="Space"&&this.gameOver&&this.resetGame()}),this.gameLoop()}updatePaddleTrail(t,i){const s=i-t.y;t.isMoving=s!==0,t.previousPositions=[...t.previousPositions.slice(1),{y:t.y,moving:t.isMoving,timestamp:Date.now()}],t.y=i}updateBallTrail(){this.ball.previousPositions=[...this.ball.previousPositions.slice(1),{x:this.ball.x,y:this.ball.y,timestamp:Date.now()}]}update(){if(this.gameOver){this.confettiParticles.forEach(s=>{s.x+=s.speedX*.5,s.y+=s.speedY*.5,s.speedY+=.2,s.rotation+=s.rotationSpeed,s.speedX+=(Math.random()-.5)*.1}),this.confettiParticles=this.confettiParticles.filter(s=>s.y<this.canvas.height),this.trophyScale<1&&(this.trophyScale+=.02);return}let t=this.paddle1.y,i=this.paddle2.y;this.keys.q&&(t=Math.max(0,this.paddle1.y-this.paddle1.speed)),this.keys.a&&(t=Math.min(this.canvas.height-this.paddle1.height,this.paddle1.y+this.paddle1.speed)),this.keys.p&&(i=Math.max(0,this.paddle2.y-this.paddle2.speed)),this.keys.l&&(i=Math.min(this.canvas.height-this.paddle2.height,this.paddle2.y+this.paddle2.speed)),this.updatePaddleTrail(this.paddle1,t),this.updatePaddleTrail(this.paddle2,i),this.updateBallTrail(),this.ball.x+=this.ball.speedX,this.ball.y+=this.ball.speedY,(this.ball.y+this.ball.radius>this.canvas.height||this.ball.y-this.ball.radius<0)&&(this.ball.speedY=-this.ball.speedY),(this.checkPaddleCollision(this.paddle1)||this.checkPaddleCollision(this.paddle2))&&(this.ball.speedX=-this.ball.speedX),this.ball.x+this.ball.radius>this.canvas.width?(this.score1++,this.checkWinner(),this.resetBall()):this.ball.x-this.ball.radius<0&&(this.score2++,this.checkWinner(),this.resetBall())}checkPaddleCollision(t){return this.ball.x+this.ball.radius>t.x&&this.ball.x-this.ball.radius<t.x+t.width&&this.ball.y+this.ball.radius>t.y&&this.ball.y-this.ball.radius<t.y+t.height}resetBall(){this.ball.x=this.canvas.width/2,this.ball.y=this.canvas.height/2,this.ball.speedX=-this.ball.speedX,this.ball.speedY=Math.random()*10-5;const t=Date.now();this.ball.previousPositions=Array(this.BALL_TRAIL_LENGTH).fill({x:this.ball.x,y:this.ball.y,timestamp:t})}drawPaddleWithTrail(t){const i=Date.now();for(let s=t.previousPositions.length-1;s>0;s--){const e=t.previousPositions[s],a=t.previousPositions[s-1],l=e.y-a.y,n=i-e.timestamp,d=Math.max(0,1-n/this.TRAIL_FADE_TIME),f=s/this.TRAIL_LENGTH*.5,c=Math.min(d,f),r=t.height*.25;l!==0&&c>0&&(this.ctx.fillStyle=`rgba(65, 105, 225, ${c})`,l<0&&this.ctx.fillRect(t.x,e.y,t.width,r),l>0&&this.ctx.fillRect(t.x,e.y+t.height-r,t.width,r))}this.ctx.fillStyle="#000",this.ctx.fillRect(t.x,t.y,t.width,t.height)}drawBallWithTrail(){const t=Date.now();for(let i=this.ball.previousPositions.length-1;i>0;i--){const s=this.ball.previousPositions[i],e=t-s.timestamp,a=Math.max(0,1-e/this.BALL_TRAIL_FADE_TIME),l=i/this.BALL_TRAIL_LENGTH*.5,n=Math.min(a,l);n>0&&(this.ctx.beginPath(),this.ctx.arc(s.x,s.y,this.ball.radius*.8,0,Math.PI*2),this.ctx.fillStyle=`rgba(65, 105, 225, ${n})`,this.ctx.fill(),this.ctx.closePath())}this.ctx.beginPath(),this.ctx.arc(this.ball.x,this.ball.y,this.ball.radius,0,Math.PI*2),this.ctx.fillStyle="#000",this.ctx.fill(),this.ctx.closePath()}draw(){if(this.ctx.fillStyle="#fff",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.font="48px Arial",this.ctx.fillStyle="#000",this.ctx.textAlign="center",this.ctx.fillText(this.score1.toString(),this.canvas.width*.25,50),this.ctx.fillText(this.score2.toString(),this.canvas.width*.75,50),this.ctx.setLineDash([5,15]),this.ctx.beginPath(),this.ctx.moveTo(this.canvas.width/2,0),this.ctx.lineTo(this.canvas.width/2,this.canvas.height),this.ctx.strokeStyle="#000",this.ctx.stroke(),this.ctx.setLineDash([]),this.drawPaddleWithTrail(this.paddle1),this.drawPaddleWithTrail(this.paddle2),this.drawBallWithTrail(),this.gameOver&&this.winner){const t=this.winner===1?this.canvas.width*.25:this.canvas.width*.75;this.drawTrophy(t,this.canvas.height*.5),this.drawConfetti(),this.ctx.font="32px Arial",this.ctx.fillStyle="#000",this.ctx.textAlign="center",this.ctx.fillText("Press SPACE to play again",this.canvas.width*.5,this.canvas.height*.8)}}gameLoop(){this.update(),this.draw(),requestAnimationFrame(()=>this.gameLoop())}resetGame(){this.score1=0,this.score2=0,this.gameOver=!1,this.winner=null,this.trophyScale=0,this.confettiParticles=[],this.resetBall()}createConfetti(t){for(let i=0;i<this.CONFETTI_COUNT;i++){const s=(Math.random()*60+60)*Math.PI/180,e=Math.random()*8+12;this.confettiParticles.push({x:t,y:this.canvas.height*.5,speedX:Math.cos(s)*e*(Math.random()<.5?-1:1),speedY:-Math.sin(s)*e,color:`hsl(${Math.random()*360}, 100%, 50%)`,size:Math.random()*8+4,rotation:Math.random()*Math.PI*2,rotationSpeed:(Math.random()-.5)*.2})}}checkWinner(){this.score1>=this.WINNING_SCORE?(this.gameOver=!0,this.winner=1,this.createConfetti(this.canvas.width*.25)):this.score2>=this.WINNING_SCORE&&(this.gameOver=!0,this.winner=2,this.createConfetti(this.canvas.width*.75))}drawTrophy(t,i){this.ctx.save(),this.ctx.translate(t,i),this.ctx.scale(this.trophyScale,this.trophyScale),this.ctx.font=`${this.TROPHY_SIZE}px Arial`,this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText("🏆",0,0),this.ctx.restore()}drawConfetti(){this.confettiParticles.forEach(t=>{this.ctx.save(),this.ctx.translate(t.x,t.y),this.ctx.rotate(t.rotation),this.ctx.fillStyle=t.color,this.ctx.fillRect(-t.size/2,-t.size/2,t.size,t.size),this.ctx.restore()})}}window.addEventListener("load",()=>{new y});
